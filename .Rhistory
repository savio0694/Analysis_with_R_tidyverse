ggplot(data=beerdata,aes(x=dayofweek,y=beerconsumption))+geom_boxplot(aes(fill=dayofweek))+
scale_fill_brewer(palette = 'Spectral')+theme_bw()
library(dplyr)
library(ggplot2)
library(readr)
library(caret)
library(stringr)
library(purrr)
library(lubridate)
library(corrplot)
library(caretEnsemble)
library(shiny)
library(knitr)
library(e1071)
library(randomForest)
library(elasticnet)
library(boot)
library(forcats)
library(shinythemes)
beerdata<-read_csv('Consumo_cerveja.csv',col_types = cols(
`Temperatura Media (C)` = col_character(),
`Temperatura Minima (C)` = col_character(),
`Temperatura Maxima (C)` = col_character(),
`Precipitacao (mm)` = col_character(),
`Final de Semana` = col_character()
))
str(beerdata)
colnames(beerdata)<- c('date','mean_temp','min_temp','max_temp','rainfall','endofweek','beerconsumption')
beerdata
beerdata<-beerdata[ 1:365,]
tail(beerdata)
removecomma <- function(x){
x<-str_replace(x,',','.')
return(x)
}
beerdata$min_temp<-beerdata$min_temp%>%map_chr(removecomma)
beerdata$max_temp<-beerdata$max_temp%>%map_chr(removecomma)
beerdata$mean_temp<-beerdata$mean_temp%>%map_chr(removecomma)
beerdata$rainfall<-beerdata$rainfall%>%map_chr(removecomma)
for(i in 2:5){
beerdata[[i]]<-as.double(beerdata[[i]])
}
head(beerdata)
sum(is.na(beerdata))
ggplot(data=beerdata,aes(x=endofweek,y=beerconsumption))+geom_boxplot(aes(fill=endofweek))+
scale_fill_brewer(type='div',palette = 4)+theme_minimal()
beerdata[[6]]<-as.double(beerdata[[6]])
beerdata<-beerdata%>%mutate(dayofweek=wday(beerdata$date,label = TRUE))
ggplot(data=beerdata,aes(x=dayofweek,y=beerconsumption))+geom_boxplot(aes(fill=dayofweek))+
scale_fill_brewer(palette = 'Spectral')+theme_bw()
ggplot(data=beerdata,aes(x=mean_temp,y=beerconsumption))+geom_point(aes(color=mean_temp))+
geom_smooth()+facet_wrap(~dayofweek)+scale_color_gradient(low="yellow", high="red")
ggplot(data=beerdata,aes(x=rainfall,y=beerconsumption))+geom_point(aes(color=rainfall))+
scale_color_gradient(low="#00a3cc", high="#002d39")
beerdata%>%mutate(monthofyear=month(date,label = TRUE))%>%group_by(monthofyear)%>%summarise(avg_beer_consumption=mean(beerconsumption))%>%ggplot(aes(x=monthofyear,y=avg_beer_consumption,fill=avg_beer_consumption))+geom_bar(stat = 'identity')
correlation<-cor(beerdata%>%select(-c(date,endofweek,dayofweek)))
corrplot(correlation, method="number")
control <- trainControl(method="repeatedcv", number=5, repeats=3)
model <- train(beerconsumption~., data=beerdata%>%select(-c(date,dayofweek)), method="rf", preProcess="scale", trControl=control)
importance <- varImp(model, scale=FALSE)
print(importance)
plot(importance)
beerdata<-beerdata%>%select(max_temp,endofweek,min_temp,mean_temp,beerconsumption)
trainIndex <- createDataPartition(beerdata$beerconsumption, p = .8,
list = FALSE,
times = 1)
Train <- beerdata[ trainIndex,]
Test  <- beerdata[-trainIndex,]
head(Test)
fitControl <- trainControl(method = "cv",   number = 5,
savePredictions = 'final',allowParallel = TRUE)
models<-caretList(beerconsumption ~., data = Train,methodList =  c("lm","rf","lasso","ridge","knn"),
preProcess=c('center','scale'),
trControl = fitControl)
models$knn
models$ridge
model_results <- data.frame(
LM = mean(models$lm$results$RMSE),
KNN = mean(models$knn$results$RMSE),
RF = mean(models$rf$results$RMSE),
LASSO = mean(models$lasso$results$RMSE),
RIDGE = mean(models$ridge$results$RMSE)
)
print(model_results)
shinyApp(
ui <- fluidPage(theme = shinytheme("superhero"),
titlePanel("PREDICTION OF BEER CONSUMPTINON"),
sidebarLayout(
sidebarPanel(
sliderInput("MIN_TEMP",
"Minimum temperature:",
min = 0,
max = 30,
value = 30),
sliderInput("MAX_TEMP",
"Maximum temperature:",
min = 0,
max = 36,
value = 30),
radioButtons("WEEKEND", h3("WEEKEND?"),
choices = list(yes = 1, no = 0
)
)),
mainPanel(
h2("PREDICTED VALUE :"),h1(textOutput("TEMP"))
))
),
server <- function(input, output) {
beer_dashboard<-beerdata%>%select(max_temp,endofweek,min_temp,beerconsumption)
trainIndex <- createDataPartition(beer_dashboard$beerconsumption, p = .8,
list = FALSE,
times = 1)
Train <- beer_dashboard[ trainIndex,]
Test  <- beer_dashboard[-trainIndex,]
fitControl <- trainControl(method = "cv",   number = 5,
)
model<-train(beerconsumption~., data = Train,method = "lasso",trControl = fitControl)
output$TEMP <- renderText({
df <- data.frame(max_temp=input$MAX_TEMP,endofweek=as.double(input$WEEKEND),min_temp=input$MIN_TEMP)
predicted<-predict(model,df)
paste(round(predicted))
})
}
)
beerdata%>%mutate(monthofyear=month(date,label = TRUE))%>%group_by(monthofyear)%>%summarise(avg_beer_consumption=mean(beerconsumption))%>%ggplot(aes(x=monthofyear,y=avg_beer_consumption,fill=avg_beer_consumption))+geom_bar(stat = 'identity')
ggplot(data=beerdata,aes(x=rainfall,y=beerconsumption))+geom_point(aes(color=rainfall))+
scale_color_gradient(low="#00a3cc", high="#002d39")
ggplot(data=beerdata,aes(x=mean_temp,y=beerconsumption))+geom_point(aes(color=mean_temp))+
geom_smooth()+facet_wrap(~dayofweek)+scale_color_gradient(low="yellow", high="red")
# Chunk 1
library(dplyr)
library(ggplot2)
library(readr)
library(caret)
library(stringr)
library(purrr)
library(lubridate)
library(corrplot)
library(caretEnsemble)
library(shiny)
library(knitr)
library(e1071)
library(randomForest)
library(elasticnet)
library(boot)
library(forcats)
library(shinythemes)
# Chunk 2
beerdata<-read_csv('Consumo_cerveja.csv',col_types = cols(
`Temperatura Media (C)` = col_character(),
`Temperatura Minima (C)` = col_character(),
`Temperatura Maxima (C)` = col_character(),
`Precipitacao (mm)` = col_character(),
`Final de Semana` = col_character()
))
# Chunk 3
str(beerdata)
# Chunk 4
colnames(beerdata)<- c('date','mean_temp','min_temp','max_temp','rainfall','endofweek','beerconsumption')
# Chunk 5
beerdata
# Chunk 6
beerdata<-beerdata[ 1:365,]
tail(beerdata)
# Chunk 7
removecomma <- function(x){
x<-str_replace(x,',','.')
return(x)
}
# Chunk 8
beerdata$min_temp<-beerdata$min_temp%>%map_chr(removecomma)
beerdata$max_temp<-beerdata$max_temp%>%map_chr(removecomma)
beerdata$mean_temp<-beerdata$mean_temp%>%map_chr(removecomma)
beerdata$rainfall<-beerdata$rainfall%>%map_chr(removecomma)
# Chunk 9
for(i in 2:5){
beerdata[[i]]<-as.double(beerdata[[i]])
}
# Chunk 10
head(beerdata)
# Chunk 11
sum(is.na(beerdata))
# Chunk 12
ggplot(data=beerdata,aes(x=endofweek,y=beerconsumption))+geom_boxplot(aes(fill=endofweek))+
scale_fill_brewer(type='div',palette = 4)+theme_minimal()
# Chunk 13
beerdata[[6]]<-as.double(beerdata[[6]])
# Chunk 14
beerdata<-beerdata%>%mutate(dayofweek=wday(beerdata$date,label = TRUE))
# Chunk 15
ggplot(data=beerdata,aes(x=dayofweek,y=beerconsumption))+geom_boxplot(aes(fill=dayofweek))+
scale_fill_brewer(palette = 'Spectral')+theme_bw()
# Chunk 16
ggplot(data=beerdata,aes(x=mean_temp,y=beerconsumption))+geom_point(aes(color=mean_temp))+
geom_smooth()+facet_wrap(~dayofweek)+scale_color_gradient(low="yellow", high="red")
# Chunk 17
ggplot(data=beerdata,aes(x=rainfall,y=beerconsumption))+geom_point(aes(color=rainfall))+
scale_color_gradient(low="#00a3cc", high="#002d39")
# Chunk 18
beerdata%>%mutate(monthofyear=month(date,label = TRUE))%>%group_by(monthofyear)%>%summarise(avg_beer_consumption=mean(beerconsumption))%>%ggplot(aes(x=monthofyear,y=avg_beer_consumption,fill=avg_beer_consumption))+geom_bar(stat = 'identity')
# Chunk 19
correlation<-cor(beerdata%>%select(-c(date,endofweek,dayofweek)))
corrplot(correlation, method="number")
# Chunk 20
control <- trainControl(method="repeatedcv", number=5, repeats=3)
model <- train(beerconsumption~., data=beerdata%>%select(-c(date,dayofweek)), method="rf", preProcess="scale", trControl=control)
importance <- varImp(model, scale=FALSE)
print(importance)
plot(importance)
# Chunk 21
beerdata<-beerdata%>%select(max_temp,endofweek,min_temp,mean_temp,beerconsumption)
trainIndex <- createDataPartition(beerdata$beerconsumption, p = .8,
list = FALSE,
times = 1)
Train <- beerdata[ trainIndex,]
Test  <- beerdata[-trainIndex,]
head(Test)
# Chunk 22
fitControl <- trainControl(method = "cv",   number = 5,
savePredictions = 'final',allowParallel = TRUE)
models<-caretList(beerconsumption ~., data = Train,methodList =  c("lm","rf","lasso","ridge","knn"),
preProcess=c('center','scale'),
trControl = fitControl)
# Chunk 23
models$knn
# Chunk 24
models$ridge
# Chunk 1
library(dplyr)
library(ggplot2)
library(readr)
library(caret)
library(stringr)
library(purrr)
library(lubridate)
library(corrplot)
library(caretEnsemble)
library(shiny)
library(knitr)
library(e1071)
library(randomForest)
library(elasticnet)
library(boot)
library(forcats)
library(shinythemes)
# Chunk 2
beerdata<-read_csv('Consumo_cerveja.csv',col_types = cols(
`Temperatura Media (C)` = col_character(),
`Temperatura Minima (C)` = col_character(),
`Temperatura Maxima (C)` = col_character(),
`Precipitacao (mm)` = col_character(),
`Final de Semana` = col_character()
))
# Chunk 3
str(beerdata)
# Chunk 4
colnames(beerdata)<- c('date','mean_temp','min_temp','max_temp','rainfall','endofweek','beerconsumption')
# Chunk 5
beerdata
# Chunk 6
beerdata<-beerdata[ 1:365,]
tail(beerdata)
# Chunk 7
removecomma <- function(x){
x<-str_replace(x,',','.')
return(x)
}
# Chunk 8
beerdata$min_temp<-beerdata$min_temp%>%map_chr(removecomma)
beerdata$max_temp<-beerdata$max_temp%>%map_chr(removecomma)
beerdata$mean_temp<-beerdata$mean_temp%>%map_chr(removecomma)
beerdata$rainfall<-beerdata$rainfall%>%map_chr(removecomma)
# Chunk 9
for(i in 2:5){
beerdata[[i]]<-as.double(beerdata[[i]])
}
# Chunk 10
head(beerdata)
# Chunk 11
sum(is.na(beerdata))
# Chunk 12
ggplot(data=beerdata,aes(x=endofweek,y=beerconsumption))+geom_boxplot(aes(fill=endofweek))+
scale_fill_brewer(type='div',palette = 4)+theme_minimal()
# Chunk 13
beerdata[[6]]<-as.double(beerdata[[6]])
# Chunk 14
beerdata<-beerdata%>%mutate(dayofweek=wday(beerdata$date,label = TRUE))
# Chunk 15
ggplot(data=beerdata,aes(x=dayofweek,y=beerconsumption))+geom_boxplot(aes(fill=dayofweek))+
scale_fill_brewer(palette = 'Spectral')+theme_bw()
# Chunk 16
ggplot(data=beerdata,aes(x=mean_temp,y=beerconsumption))+geom_point(aes(color=mean_temp))+
geom_smooth()+facet_wrap(~dayofweek)+scale_color_gradient(low="yellow", high="red")
# Chunk 17
ggplot(data=beerdata,aes(x=rainfall,y=beerconsumption))+geom_point(aes(color=rainfall))+
scale_color_gradient(low="#00a3cc", high="#002d39")
# Chunk 18
beerdata%>%mutate(monthofyear=month(date,label = TRUE))%>%group_by(monthofyear)%>%summarise(avg_beer_consumption=mean(beerconsumption))%>%ggplot(aes(x=monthofyear,y=avg_beer_consumption,fill=avg_beer_consumption))+geom_bar(stat = 'identity')
# Chunk 19
correlation<-cor(beerdata%>%select(-c(date,endofweek,dayofweek)))
corrplot(correlation, method="number")
# Chunk 20
control <- trainControl(method="repeatedcv", number=5, repeats=3)
model <- train(beerconsumption~., data=beerdata%>%select(-c(date,dayofweek)), method="rf", preProcess="scale", trControl=control)
importance <- varImp(model, scale=FALSE)
print(importance)
plot(importance)
# Chunk 21
beerdata<-beerdata%>%select(max_temp,endofweek,min_temp,mean_temp,beerconsumption)
trainIndex <- createDataPartition(beerdata$beerconsumption, p = .8,
list = FALSE,
times = 1)
Train <- beerdata[ trainIndex,]
Test  <- beerdata[-trainIndex,]
head(Test)
# Chunk 22
fitControl <- trainControl(method = "cv",   number = 5,
savePredictions = 'final',allowParallel = TRUE)
models<-caretList(beerconsumption ~., data = Train,methodList =  c("lm","rf","lasso","ridge","knn"),
preProcess=c('center','scale'),
trControl = fitControl)
# Chunk 23
models$knn
# Chunk 24
models$ridge
# Chunk 25
model_results <- data.frame(
LM = mean(models$lm$results$RMSE),
KNN = mean(models$knn$results$RMSE),
RF = mean(models$rf$results$RMSE),
LASSO = mean(models$lasso$results$RMSE),
RIDGE = mean(models$ridge$results$RMSE)
)
print(model_results)
